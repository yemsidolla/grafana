{"version":3,"file":"792.js?_cache=79c48dbde1c722d712fa","mappings":"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","sources":["webpack://grafana-metricsdrilldown-app/../node_modules/react-from-dom/dist/index.mjs","webpack://grafana-metricsdrilldown-app/../node_modules/react-inlinesvg/dist/index.mjs"],"sourcesContent":["// src/index.ts\nimport * as React from \"react\";\n\n// src/helpers.ts\nvar styleToObject = (input) => {\n  if (typeof input !== \"string\") {\n    return {};\n  }\n  return input.split(/ ?; ?/).reduce((acc, item) => {\n    const [key, value] = item.split(/ ?: ?/).map((d, index) => index === 0 ? d.replace(/\\s+/g, \"\") : d.trim());\n    if (key && value) {\n      const nextKey = key.replace(/(\\w)-(\\w)/g, (_$0, $1, $2) => `${$1}${$2.toUpperCase()}`);\n      let nextValue = value.trim();\n      if (!Number.isNaN(Number(value))) {\n        nextValue = Number(value);\n      }\n      acc[key.startsWith(\"-\") ? key : nextKey] = nextValue;\n    }\n    return acc;\n  }, {});\n};\nfunction randomString(length = 6) {\n  const characters = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  let result = \"\";\n  for (let index = length; index > 0; --index) {\n    result += characters[Math.round(Math.random() * (characters.length - 1))];\n  }\n  return result;\n}\nvar noTextChildNodes = [\n  \"br\",\n  \"col\",\n  \"colgroup\",\n  \"dl\",\n  \"hr\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"link\",\n  \"menuitem\",\n  \"meta\",\n  \"ol\",\n  \"param\",\n  \"select\",\n  \"table\",\n  \"tbody\",\n  \"tfoot\",\n  \"thead\",\n  \"tr\",\n  \"ul\",\n  \"wbr\"\n];\nvar possibleStandardNames = {\n  // HTML\n  \"accept-charset\": \"acceptCharset\",\n  acceptcharset: \"acceptCharset\",\n  accesskey: \"accessKey\",\n  allowfullscreen: \"allowFullScreen\",\n  autocapitalize: \"autoCapitalize\",\n  autocomplete: \"autoComplete\",\n  autocorrect: \"autoCorrect\",\n  autofocus: \"autoFocus\",\n  autoplay: \"autoPlay\",\n  autosave: \"autoSave\",\n  cellpadding: \"cellPadding\",\n  cellspacing: \"cellSpacing\",\n  charset: \"charSet\",\n  class: \"className\",\n  classid: \"classID\",\n  classname: \"className\",\n  colspan: \"colSpan\",\n  contenteditable: \"contentEditable\",\n  contextmenu: \"contextMenu\",\n  controlslist: \"controlsList\",\n  crossorigin: \"crossOrigin\",\n  dangerouslysetinnerhtml: \"dangerouslySetInnerHTML\",\n  datetime: \"dateTime\",\n  defaultchecked: \"defaultChecked\",\n  defaultvalue: \"defaultValue\",\n  enctype: \"encType\",\n  for: \"htmlFor\",\n  formmethod: \"formMethod\",\n  formaction: \"formAction\",\n  formenctype: \"formEncType\",\n  formnovalidate: \"formNoValidate\",\n  formtarget: \"formTarget\",\n  frameborder: \"frameBorder\",\n  hreflang: \"hrefLang\",\n  htmlfor: \"htmlFor\",\n  httpequiv: \"httpEquiv\",\n  \"http-equiv\": \"httpEquiv\",\n  icon: \"icon\",\n  innerhtml: \"innerHTML\",\n  inputmode: \"inputMode\",\n  itemid: \"itemID\",\n  itemprop: \"itemProp\",\n  itemref: \"itemRef\",\n  itemscope: \"itemScope\",\n  itemtype: \"itemType\",\n  keyparams: \"keyParams\",\n  keytype: \"keyType\",\n  marginwidth: \"marginWidth\",\n  marginheight: \"marginHeight\",\n  maxlength: \"maxLength\",\n  mediagroup: \"mediaGroup\",\n  minlength: \"minLength\",\n  nomodule: \"noModule\",\n  novalidate: \"noValidate\",\n  playsinline: \"playsInline\",\n  radiogroup: \"radioGroup\",\n  readonly: \"readOnly\",\n  referrerpolicy: \"referrerPolicy\",\n  rowspan: \"rowSpan\",\n  spellcheck: \"spellCheck\",\n  srcdoc: \"srcDoc\",\n  srclang: \"srcLang\",\n  srcset: \"srcSet\",\n  tabindex: \"tabIndex\",\n  typemustmatch: \"typeMustMatch\",\n  usemap: \"useMap\",\n  // SVG\n  accentheight: \"accentHeight\",\n  \"accent-height\": \"accentHeight\",\n  alignmentbaseline: \"alignmentBaseline\",\n  \"alignment-baseline\": \"alignmentBaseline\",\n  allowreorder: \"allowReorder\",\n  arabicform: \"arabicForm\",\n  \"arabic-form\": \"arabicForm\",\n  attributename: \"attributeName\",\n  attributetype: \"attributeType\",\n  autoreverse: \"autoReverse\",\n  basefrequency: \"baseFrequency\",\n  baselineshift: \"baselineShift\",\n  \"baseline-shift\": \"baselineShift\",\n  baseprofile: \"baseProfile\",\n  calcmode: \"calcMode\",\n  capheight: \"capHeight\",\n  \"cap-height\": \"capHeight\",\n  clippath: \"clipPath\",\n  \"clip-path\": \"clipPath\",\n  clippathunits: \"clipPathUnits\",\n  cliprule: \"clipRule\",\n  \"clip-rule\": \"clipRule\",\n  colorinterpolation: \"colorInterpolation\",\n  \"color-interpolation\": \"colorInterpolation\",\n  colorinterpolationfilters: \"colorInterpolationFilters\",\n  \"color-interpolation-filters\": \"colorInterpolationFilters\",\n  colorprofile: \"colorProfile\",\n  \"color-profile\": \"colorProfile\",\n  colorrendering: \"colorRendering\",\n  \"color-rendering\": \"colorRendering\",\n  contentscripttype: \"contentScriptType\",\n  contentstyletype: \"contentStyleType\",\n  diffuseconstant: \"diffuseConstant\",\n  dominantbaseline: \"dominantBaseline\",\n  \"dominant-baseline\": \"dominantBaseline\",\n  edgemode: \"edgeMode\",\n  enablebackground: \"enableBackground\",\n  \"enable-background\": \"enableBackground\",\n  externalresourcesrequired: \"externalResourcesRequired\",\n  fillopacity: \"fillOpacity\",\n  \"fill-opacity\": \"fillOpacity\",\n  fillrule: \"fillRule\",\n  \"fill-rule\": \"fillRule\",\n  filterres: \"filterRes\",\n  filterunits: \"filterUnits\",\n  floodopacity: \"floodOpacity\",\n  \"flood-opacity\": \"floodOpacity\",\n  floodcolor: \"floodColor\",\n  \"flood-color\": \"floodColor\",\n  fontfamily: \"fontFamily\",\n  \"font-family\": \"fontFamily\",\n  fontsize: \"fontSize\",\n  \"font-size\": \"fontSize\",\n  fontsizeadjust: \"fontSizeAdjust\",\n  \"font-size-adjust\": \"fontSizeAdjust\",\n  fontstretch: \"fontStretch\",\n  \"font-stretch\": \"fontStretch\",\n  fontstyle: \"fontStyle\",\n  \"font-style\": \"fontStyle\",\n  fontvariant: \"fontVariant\",\n  \"font-variant\": \"fontVariant\",\n  fontweight: \"fontWeight\",\n  \"font-weight\": \"fontWeight\",\n  glyphname: \"glyphName\",\n  \"glyph-name\": \"glyphName\",\n  glyphorientationhorizontal: \"glyphOrientationHorizontal\",\n  \"glyph-orientation-horizontal\": \"glyphOrientationHorizontal\",\n  glyphorientationvertical: \"glyphOrientationVertical\",\n  \"glyph-orientation-vertical\": \"glyphOrientationVertical\",\n  glyphref: \"glyphRef\",\n  gradienttransform: \"gradientTransform\",\n  gradientunits: \"gradientUnits\",\n  horizadvx: \"horizAdvX\",\n  \"horiz-adv-x\": \"horizAdvX\",\n  horizoriginx: \"horizOriginX\",\n  \"horiz-origin-x\": \"horizOriginX\",\n  imagerendering: \"imageRendering\",\n  \"image-rendering\": \"imageRendering\",\n  kernelmatrix: \"kernelMatrix\",\n  kernelunitlength: \"kernelUnitLength\",\n  keypoints: \"keyPoints\",\n  keysplines: \"keySplines\",\n  keytimes: \"keyTimes\",\n  lengthadjust: \"lengthAdjust\",\n  letterspacing: \"letterSpacing\",\n  \"letter-spacing\": \"letterSpacing\",\n  lightingcolor: \"lightingColor\",\n  \"lighting-color\": \"lightingColor\",\n  limitingconeangle: \"limitingConeAngle\",\n  markerend: \"markerEnd\",\n  \"marker-end\": \"markerEnd\",\n  markerheight: \"markerHeight\",\n  markermid: \"markerMid\",\n  \"marker-mid\": \"markerMid\",\n  markerstart: \"markerStart\",\n  \"marker-start\": \"markerStart\",\n  markerunits: \"markerUnits\",\n  markerwidth: \"markerWidth\",\n  maskcontentunits: \"maskContentUnits\",\n  maskunits: \"maskUnits\",\n  numoctaves: \"numOctaves\",\n  overlineposition: \"overlinePosition\",\n  \"overline-position\": \"overlinePosition\",\n  overlinethickness: \"overlineThickness\",\n  \"overline-thickness\": \"overlineThickness\",\n  paintorder: \"paintOrder\",\n  \"paint-order\": \"paintOrder\",\n  \"panose-1\": \"panose1\",\n  pathlength: \"pathLength\",\n  patterncontentunits: \"patternContentUnits\",\n  patterntransform: \"patternTransform\",\n  patternunits: \"patternUnits\",\n  pointerevents: \"pointerEvents\",\n  \"pointer-events\": \"pointerEvents\",\n  pointsatx: \"pointsAtX\",\n  pointsaty: \"pointsAtY\",\n  pointsatz: \"pointsAtZ\",\n  preservealpha: \"preserveAlpha\",\n  preserveaspectratio: \"preserveAspectRatio\",\n  primitiveunits: \"primitiveUnits\",\n  refx: \"refX\",\n  refy: \"refY\",\n  renderingintent: \"renderingIntent\",\n  \"rendering-intent\": \"renderingIntent\",\n  repeatcount: \"repeatCount\",\n  repeatdur: \"repeatDur\",\n  requiredextensions: \"requiredExtensions\",\n  requiredfeatures: \"requiredFeatures\",\n  shaperendering: \"shapeRendering\",\n  \"shape-rendering\": \"shapeRendering\",\n  specularconstant: \"specularConstant\",\n  specularexponent: \"specularExponent\",\n  spreadmethod: \"spreadMethod\",\n  startoffset: \"startOffset\",\n  stddeviation: \"stdDeviation\",\n  stitchtiles: \"stitchTiles\",\n  stopcolor: \"stopColor\",\n  \"stop-color\": \"stopColor\",\n  stopopacity: \"stopOpacity\",\n  \"stop-opacity\": \"stopOpacity\",\n  strikethroughposition: \"strikethroughPosition\",\n  \"strikethrough-position\": \"strikethroughPosition\",\n  strikethroughthickness: \"strikethroughThickness\",\n  \"strikethrough-thickness\": \"strikethroughThickness\",\n  strokedasharray: \"strokeDasharray\",\n  \"stroke-dasharray\": \"strokeDasharray\",\n  strokedashoffset: \"strokeDashoffset\",\n  \"stroke-dashoffset\": \"strokeDashoffset\",\n  strokelinecap: \"strokeLinecap\",\n  \"stroke-linecap\": \"strokeLinecap\",\n  strokelinejoin: \"strokeLinejoin\",\n  \"stroke-linejoin\": \"strokeLinejoin\",\n  strokemiterlimit: \"strokeMiterlimit\",\n  \"stroke-miterlimit\": \"strokeMiterlimit\",\n  strokewidth: \"strokeWidth\",\n  \"stroke-width\": \"strokeWidth\",\n  strokeopacity: \"strokeOpacity\",\n  \"stroke-opacity\": \"strokeOpacity\",\n  suppresscontenteditablewarning: \"suppressContentEditableWarning\",\n  suppresshydrationwarning: \"suppressHydrationWarning\",\n  surfacescale: \"surfaceScale\",\n  systemlanguage: \"systemLanguage\",\n  tablevalues: \"tableValues\",\n  targetx: \"targetX\",\n  targety: \"targetY\",\n  textanchor: \"textAnchor\",\n  \"text-anchor\": \"textAnchor\",\n  textdecoration: \"textDecoration\",\n  \"text-decoration\": \"textDecoration\",\n  textlength: \"textLength\",\n  textrendering: \"textRendering\",\n  \"text-rendering\": \"textRendering\",\n  underlineposition: \"underlinePosition\",\n  \"underline-position\": \"underlinePosition\",\n  underlinethickness: \"underlineThickness\",\n  \"underline-thickness\": \"underlineThickness\",\n  unicodebidi: \"unicodeBidi\",\n  \"unicode-bidi\": \"unicodeBidi\",\n  unicoderange: \"unicodeRange\",\n  \"unicode-range\": \"unicodeRange\",\n  unitsperem: \"unitsPerEm\",\n  \"units-per-em\": \"unitsPerEm\",\n  unselectable: \"unselectable\",\n  valphabetic: \"vAlphabetic\",\n  \"v-alphabetic\": \"vAlphabetic\",\n  vectoreffect: \"vectorEffect\",\n  \"vector-effect\": \"vectorEffect\",\n  vertadvy: \"vertAdvY\",\n  \"vert-adv-y\": \"vertAdvY\",\n  vertoriginx: \"vertOriginX\",\n  \"vert-origin-x\": \"vertOriginX\",\n  vertoriginy: \"vertOriginY\",\n  \"vert-origin-y\": \"vertOriginY\",\n  vhanging: \"vHanging\",\n  \"v-hanging\": \"vHanging\",\n  videographic: \"vIdeographic\",\n  \"v-ideographic\": \"vIdeographic\",\n  viewbox: \"viewBox\",\n  viewtarget: \"viewTarget\",\n  vmathematical: \"vMathematical\",\n  \"v-mathematical\": \"vMathematical\",\n  wordspacing: \"wordSpacing\",\n  \"word-spacing\": \"wordSpacing\",\n  writingmode: \"writingMode\",\n  \"writing-mode\": \"writingMode\",\n  xchannelselector: \"xChannelSelector\",\n  xheight: \"xHeight\",\n  \"x-height\": \"xHeight\",\n  xlinkactuate: \"xlinkActuate\",\n  \"xlink:actuate\": \"xlinkActuate\",\n  xlinkarcrole: \"xlinkArcrole\",\n  \"xlink:arcrole\": \"xlinkArcrole\",\n  xlinkhref: \"xlinkHref\",\n  \"xlink:href\": \"xlinkHref\",\n  xlinkrole: \"xlinkRole\",\n  \"xlink:role\": \"xlinkRole\",\n  xlinkshow: \"xlinkShow\",\n  \"xlink:show\": \"xlinkShow\",\n  xlinktitle: \"xlinkTitle\",\n  \"xlink:title\": \"xlinkTitle\",\n  xlinktype: \"xlinkType\",\n  \"xlink:type\": \"xlinkType\",\n  xmlbase: \"xmlBase\",\n  \"xml:base\": \"xmlBase\",\n  xmllang: \"xmlLang\",\n  \"xml:lang\": \"xmlLang\",\n  \"xml:space\": \"xmlSpace\",\n  xmlnsxlink: \"xmlnsXlink\",\n  \"xmlns:xlink\": \"xmlnsXlink\",\n  xmlspace: \"xmlSpace\",\n  ychannelselector: \"yChannelSelector\",\n  zoomandpan: \"zoomAndPan\",\n  // event handlers\n  onblur: \"onBlur\",\n  onchange: \"onChange\",\n  onclick: \"onClick\",\n  oncontextmenu: \"onContextMenu\",\n  ondoubleclick: \"onDoubleClick\",\n  ondrag: \"onDrag\",\n  ondragend: \"onDragEnd\",\n  ondragenter: \"onDragEnter\",\n  ondragexit: \"onDragExit\",\n  ondragleave: \"onDragLeave\",\n  ondragover: \"onDragOver\",\n  ondragstart: \"onDragStart\",\n  ondrop: \"onDrop\",\n  onerror: \"onError\",\n  onfocus: \"onFocus\",\n  oninput: \"onInput\",\n  oninvalid: \"onInvalid\",\n  onkeydown: \"onKeyDown\",\n  onkeypress: \"onKeyPress\",\n  onkeyup: \"onKeyUp\",\n  onload: \"onLoad\",\n  onmousedown: \"onMouseDown\",\n  onmouseenter: \"onMouseEnter\",\n  onmouseleave: \"onMouseLeave\",\n  onmousemove: \"onMouseMove\",\n  onmouseout: \"onMouseOut\",\n  onmouseover: \"onMouseOver\",\n  onmouseup: \"onMouseUp\",\n  onscroll: \"onScroll\",\n  onsubmit: \"onSubmit\",\n  ontouchcancel: \"onTouchCancel\",\n  ontouchend: \"onTouchEnd\",\n  ontouchmove: \"onTouchMove\",\n  ontouchstart: \"onTouchStart\",\n  onwheel: \"onWheel\"\n};\n\n// src/index.ts\nfunction getReactNode(node, options) {\n  const { key, level, ...rest } = options;\n  switch (node.nodeType) {\n    case 1: {\n      return React.createElement(\n        parseName(node.nodeName),\n        parseAttributes(node, key),\n        parseChildren(node.childNodes, level, rest)\n      );\n    }\n    case 3: {\n      const nodeText = node.nodeValue?.toString() ?? \"\";\n      if (!rest.allowWhiteSpaces && /^\\s+$/.test(nodeText) && !/[\\u00A0\\u202F]/.test(nodeText)) {\n        return null;\n      }\n      if (!node.parentNode) {\n        return nodeText;\n      }\n      const parentNodeName = node.parentNode.nodeName.toLowerCase();\n      if (noTextChildNodes.includes(parentNodeName)) {\n        if (/\\S/.test(nodeText)) {\n          console.warn(\n            `A textNode is not allowed inside '${parentNodeName}'. Your text \"${nodeText}\" will be ignored`\n          );\n        }\n        return null;\n      }\n      return nodeText;\n    }\n    case 8: {\n      return null;\n    }\n    case 11: {\n      return parseChildren(node.childNodes, level, options);\n    }\n    /* c8 ignore next 3 */\n    default: {\n      return null;\n    }\n  }\n}\nfunction parseAttributes(node, reactKey) {\n  const attributes = {\n    key: reactKey\n  };\n  if (node instanceof Element) {\n    const nodeClassNames = node.getAttribute(\"class\");\n    if (nodeClassNames) {\n      attributes.className = nodeClassNames;\n    }\n    [...node.attributes].forEach((d) => {\n      switch (d.name) {\n        // this is manually handled above, so break;\n        case \"class\":\n          break;\n        case \"style\":\n          attributes[d.name] = styleToObject(d.value);\n          break;\n        case \"allowfullscreen\":\n        case \"allowpaymentrequest\":\n        case \"async\":\n        case \"autofocus\":\n        case \"autoplay\":\n        case \"checked\":\n        case \"controls\":\n        case \"default\":\n        case \"defer\":\n        case \"disabled\":\n        case \"formnovalidate\":\n        case \"hidden\":\n        case \"ismap\":\n        case \"itemscope\":\n        case \"loop\":\n        case \"multiple\":\n        case \"muted\":\n        case \"nomodule\":\n        case \"novalidate\":\n        case \"open\":\n        case \"readonly\":\n        case \"required\":\n        case \"reversed\":\n        case \"selected\":\n        case \"typemustmatch\":\n          attributes[possibleStandardNames[d.name] || d.name] = true;\n          break;\n        default:\n          attributes[possibleStandardNames[d.name] || d.name] = d.value;\n      }\n    });\n  }\n  return attributes;\n}\nfunction parseChildren(childNodeList, level, options) {\n  const children = [...childNodeList].map(\n    (node, index) => convertFromNode(node, {\n      ...options,\n      index,\n      level: level + 1\n    })\n  ).filter(Boolean);\n  if (!children.length) {\n    return null;\n  }\n  return children;\n}\nfunction parseName(nodeName) {\n  if (/[a-z]+[A-Z]+[a-z]+/.test(nodeName)) {\n    return nodeName;\n  }\n  return nodeName.toLowerCase();\n}\nfunction convert(input, options = {}) {\n  if (typeof input === \"string\") {\n    return convertFromString(input, options);\n  }\n  if (input instanceof Node) {\n    return convertFromNode(input, options);\n  }\n  return null;\n}\nfunction convertFromNode(input, options = {}) {\n  if (!input || !(input instanceof Node)) {\n    return null;\n  }\n  const { actions = [], index = 0, level = 0, randomKey } = options;\n  let node = input;\n  let key = `${level}-${index}`;\n  const result = [];\n  if (randomKey && level === 0) {\n    key = `${randomString()}-${key}`;\n  }\n  if (Array.isArray(actions)) {\n    actions.forEach((action) => {\n      if (action.condition(node, key, level)) {\n        if (typeof action.pre === \"function\") {\n          node = action.pre(node, key, level);\n          if (!(node instanceof Node)) {\n            node = input;\n            if (process.env.NODE_ENV !== \"production\") {\n              console.warn(\n                \"The `pre` method always must return a valid DomNode (instanceof Node) - your modification will be ignored (Hint: if you want to render a React-component, use the `post` method instead)\"\n              );\n            }\n          }\n        }\n        if (typeof action.post === \"function\") {\n          result.push(action.post(node, key, level));\n        }\n      }\n    });\n  }\n  if (result.length) {\n    return result;\n  }\n  return getReactNode(node, { key, level, ...options });\n}\nfunction convertFromString(input, options = {}) {\n  if (!input || typeof input !== \"string\") {\n    return null;\n  }\n  const {\n    includeAllNodes = false,\n    nodeOnly = false,\n    selector = \"body > *\",\n    type = \"text/html\"\n  } = options;\n  try {\n    const parser = new DOMParser();\n    const document = parser.parseFromString(input, type);\n    if (includeAllNodes) {\n      const { childNodes } = document.body;\n      if (nodeOnly) {\n        return childNodes;\n      }\n      return [...childNodes].map((node2) => convertFromNode(node2, options));\n    }\n    const node = document.querySelector(selector) || document.body.childNodes[0];\n    if (!(node instanceof Node)) {\n      throw new TypeError(\"Error parsing input\");\n    }\n    if (nodeOnly) {\n      return node;\n    }\n    return convertFromNode(node, options);\n  } catch (error) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(error);\n    }\n  }\n  return null;\n}\nexport {\n  convertFromNode,\n  convertFromString,\n  convert as default\n};\n//# sourceMappingURL=index.mjs.map","\"use client\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/index.tsx\nimport React, {\n  cloneElement,\n  isValidElement,\n  useCallback,\n  useEffect as useEffect2,\n  useReducer,\n  useRef as useRef2,\n  useState\n} from \"react\";\nimport convert2 from \"react-from-dom\";\n\n// src/config.ts\nvar CACHE_NAME = \"react-inlinesvg\";\nvar CACHE_MAX_RETRIES = 10;\nvar STATUS = {\n  IDLE: \"idle\",\n  LOADING: \"loading\",\n  LOADED: \"loaded\",\n  FAILED: \"failed\",\n  READY: \"ready\",\n  UNSUPPORTED: \"unsupported\"\n};\n\n// src/modules/helpers.ts\nfunction randomCharacter(character) {\n  return character[Math.floor(Math.random() * character.length)];\n}\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document?.createElement);\n}\nfunction isSupportedEnvironment() {\n  return supportsInlineSVG() && typeof window !== \"undefined\" && window !== null;\n}\nfunction omit(input, ...filter) {\n  const output = {};\n  for (const key in input) {\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n  return output;\n}\nfunction randomString(length) {\n  const letters = \"abcdefghijklmnopqrstuvwxyz\";\n  const numbers = \"1234567890\";\n  const charset = `${letters}${letters.toUpperCase()}${numbers}`;\n  let R = \"\";\n  for (let index = 0; index < length; index++) {\n    R += randomCharacter(charset);\n  }\n  return R;\n}\nasync function request(url, options) {\n  const response = await fetch(url, options);\n  const contentType = response.headers.get(\"content-type\");\n  const [fileType] = (contentType ?? \"\").split(/ ?; ?/);\n  if (response.status > 299) {\n    throw new Error(\"Not found\");\n  }\n  if (![\"image/svg+xml\", \"text/plain\"].some((d) => fileType.includes(d))) {\n    throw new Error(`Content type isn't valid: ${fileType}`);\n  }\n  return response.text();\n}\nfunction sleep(seconds = 1) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, seconds * 1e3);\n  });\n}\nfunction supportsInlineSVG() {\n  if (!document) {\n    return false;\n  }\n  const div = document.createElement(\"div\");\n  div.innerHTML = \"<svg />\";\n  const svg = div.firstChild;\n  return !!svg && svg.namespaceURI === \"http://www.w3.org/2000/svg\";\n}\n\n// src/modules/cache.ts\nvar CacheStore = class {\n  constructor() {\n    __publicField(this, \"cacheApi\");\n    __publicField(this, \"cacheStore\");\n    __publicField(this, \"subscribers\", []);\n    __publicField(this, \"isReady\", false);\n    this.cacheStore = /* @__PURE__ */ new Map();\n    let cacheName = CACHE_NAME;\n    let usePersistentCache = false;\n    if (canUseDOM()) {\n      cacheName = window.REACT_INLINESVG_CACHE_NAME ?? CACHE_NAME;\n      usePersistentCache = !!window.REACT_INLINESVG_PERSISTENT_CACHE && \"caches\" in window;\n    }\n    if (usePersistentCache) {\n      caches.open(cacheName).then((cache) => {\n        this.cacheApi = cache;\n      }).catch((error) => {\n        console.error(`Failed to open cache: ${error.message}`);\n        this.cacheApi = void 0;\n      }).finally(() => {\n        this.isReady = true;\n        const callbacks = [...this.subscribers];\n        this.subscribers.length = 0;\n        callbacks.forEach((callback) => {\n          try {\n            callback();\n          } catch (error) {\n            console.error(`Error in CacheStore subscriber callback: ${error.message}`);\n          }\n        });\n      });\n    } else {\n      this.isReady = true;\n    }\n  }\n  onReady(callback) {\n    if (this.isReady) {\n      callback();\n    } else {\n      this.subscribers.push(callback);\n    }\n  }\n  async get(url, fetchOptions) {\n    await (this.cacheApi ? this.fetchAndAddToPersistentCache(url, fetchOptions) : this.fetchAndAddToInternalCache(url, fetchOptions));\n    return this.cacheStore.get(url)?.content ?? \"\";\n  }\n  set(url, data) {\n    this.cacheStore.set(url, data);\n  }\n  isCached(url) {\n    return this.cacheStore.get(url)?.status === STATUS.LOADED;\n  }\n  async fetchAndAddToInternalCache(url, fetchOptions) {\n    const cache = this.cacheStore.get(url);\n    if (cache?.status === STATUS.LOADING) {\n      await this.handleLoading(url, async () => {\n        this.cacheStore.set(url, { content: \"\", status: STATUS.IDLE });\n        await this.fetchAndAddToInternalCache(url, fetchOptions);\n      });\n      return;\n    }\n    if (!cache?.content) {\n      this.cacheStore.set(url, { content: \"\", status: STATUS.LOADING });\n      try {\n        const content = await request(url, fetchOptions);\n        this.cacheStore.set(url, { content, status: STATUS.LOADED });\n      } catch (error) {\n        this.cacheStore.set(url, { content: \"\", status: STATUS.FAILED });\n        throw error;\n      }\n    }\n  }\n  async fetchAndAddToPersistentCache(url, fetchOptions) {\n    const cache = this.cacheStore.get(url);\n    if (cache?.status === STATUS.LOADED) {\n      return;\n    }\n    if (cache?.status === STATUS.LOADING) {\n      await this.handleLoading(url, async () => {\n        this.cacheStore.set(url, { content: \"\", status: STATUS.IDLE });\n        await this.fetchAndAddToPersistentCache(url, fetchOptions);\n      });\n      return;\n    }\n    this.cacheStore.set(url, { content: \"\", status: STATUS.LOADING });\n    const data = await this.cacheApi?.match(url);\n    if (data) {\n      const content = await data.text();\n      this.cacheStore.set(url, { content, status: STATUS.LOADED });\n      return;\n    }\n    try {\n      await this.cacheApi?.add(new Request(url, fetchOptions));\n      const response = await this.cacheApi?.match(url);\n      const content = await response?.text() ?? \"\";\n      this.cacheStore.set(url, { content, status: STATUS.LOADED });\n    } catch (error) {\n      this.cacheStore.set(url, { content: \"\", status: STATUS.FAILED });\n      throw error;\n    }\n  }\n  async handleLoading(url, callback) {\n    for (let retryCount = 0; retryCount < CACHE_MAX_RETRIES; retryCount++) {\n      if (this.cacheStore.get(url)?.status !== STATUS.LOADING) {\n        return;\n      }\n      await sleep(0.1);\n    }\n    await callback();\n  }\n  keys() {\n    return [...this.cacheStore.keys()];\n  }\n  data() {\n    return [...this.cacheStore.entries()].map(([key, value]) => ({ [key]: value }));\n  }\n  async delete(url) {\n    if (this.cacheApi) {\n      await this.cacheApi.delete(url);\n    }\n    this.cacheStore.delete(url);\n  }\n  async clear() {\n    if (this.cacheApi) {\n      const keys = await this.cacheApi.keys();\n      await Promise.allSettled(keys.map((key) => this.cacheApi.delete(key)));\n    }\n    this.cacheStore.clear();\n  }\n};\n\n// src/modules/hooks.tsx\nimport { useEffect, useRef } from \"react\";\nfunction usePrevious(state) {\n  const ref = useRef(void 0);\n  useEffect(() => {\n    ref.current = state;\n  });\n  return ref.current;\n}\n\n// src/modules/utils.ts\nimport convert from \"react-from-dom\";\nfunction getNode(options) {\n  const {\n    baseURL,\n    content,\n    description,\n    handleError,\n    hash,\n    preProcessor,\n    title,\n    uniquifyIDs = false\n  } = options;\n  try {\n    const svgText = processSVG(content, preProcessor);\n    const node = convert(svgText, { nodeOnly: true });\n    if (!node || !(node instanceof SVGSVGElement)) {\n      throw new Error(\"Could not convert the src to a DOM Node\");\n    }\n    const svg = updateSVGAttributes(node, { baseURL, hash, uniquifyIDs });\n    if (description) {\n      const originalDesc = svg.querySelector(\"desc\");\n      if (originalDesc?.parentNode) {\n        originalDesc.parentNode.removeChild(originalDesc);\n      }\n      const descElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"desc\");\n      descElement.innerHTML = description;\n      svg.prepend(descElement);\n    }\n    if (typeof title !== \"undefined\") {\n      const originalTitle = svg.querySelector(\"title\");\n      if (originalTitle?.parentNode) {\n        originalTitle.parentNode.removeChild(originalTitle);\n      }\n      if (title) {\n        const titleElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"title\");\n        titleElement.innerHTML = title;\n        svg.prepend(titleElement);\n      }\n    }\n    return svg;\n  } catch (error) {\n    return handleError(error);\n  }\n}\nfunction processSVG(content, preProcessor) {\n  if (preProcessor) {\n    return preProcessor(content);\n  }\n  return content;\n}\nfunction updateSVGAttributes(node, options) {\n  const { baseURL = \"\", hash, uniquifyIDs } = options;\n  const replaceableAttributes = [\"id\", \"href\", \"xlink:href\", \"xlink:role\", \"xlink:arcrole\"];\n  const linkAttributes = [\"href\", \"xlink:href\"];\n  const isDataValue = (name, value) => linkAttributes.includes(name) && (value ? !value.includes(\"#\") : false);\n  if (!uniquifyIDs) {\n    return node;\n  }\n  [...node.children].forEach((d) => {\n    if (d.attributes?.length) {\n      const attributes = Object.values(d.attributes).map((a) => {\n        const attribute = a;\n        const match = /url\\((.*?)\\)/.exec(a.value);\n        if (match?.[1]) {\n          attribute.value = a.value.replace(match[0], `url(${baseURL}${match[1]}__${hash})`);\n        }\n        return attribute;\n      });\n      replaceableAttributes.forEach((r) => {\n        const attribute = attributes.find((a) => a.name === r);\n        if (attribute && !isDataValue(r, attribute.value)) {\n          attribute.value = `${attribute.value}__${hash}`;\n        }\n      });\n    }\n    if (d.children.length) {\n      return updateSVGAttributes(d, options);\n    }\n    return d;\n  });\n  return node;\n}\n\n// src/index.tsx\nvar cacheStore;\nfunction ReactInlineSVG(props) {\n  const {\n    cacheRequests = true,\n    children = null,\n    description,\n    fetchOptions,\n    innerRef,\n    loader = null,\n    onError,\n    onLoad,\n    src,\n    title,\n    uniqueHash\n  } = props;\n  const [state, setState] = useReducer(\n    (previousState2, nextState) => ({\n      ...previousState2,\n      ...nextState\n    }),\n    {\n      content: \"\",\n      element: null,\n      isCached: cacheRequests && cacheStore.isCached(props.src),\n      status: STATUS.IDLE\n    }\n  );\n  const { content, element, isCached, status } = state;\n  const previousProps = usePrevious(props);\n  const previousState = usePrevious(state);\n  const hash = useRef2(uniqueHash ?? randomString(8));\n  const isActive = useRef2(false);\n  const isInitialized = useRef2(false);\n  const handleError = useCallback(\n    (error) => {\n      if (isActive.current) {\n        setState({\n          status: error.message === \"Browser does not support SVG\" ? STATUS.UNSUPPORTED : STATUS.FAILED\n        });\n        onError?.(error);\n      }\n    },\n    [onError]\n  );\n  const handleLoad = useCallback((loadedContent, hasCache = false) => {\n    if (isActive.current) {\n      setState({\n        content: loadedContent,\n        isCached: hasCache,\n        status: STATUS.LOADED\n      });\n    }\n  }, []);\n  const fetchContent = useCallback(async () => {\n    const responseContent = await request(src, fetchOptions);\n    handleLoad(responseContent);\n  }, [fetchOptions, handleLoad, src]);\n  const getElement = useCallback(() => {\n    try {\n      const node = getNode({ ...props, handleError, hash: hash.current, content });\n      const convertedElement = convert2(node);\n      if (!convertedElement || !isValidElement(convertedElement)) {\n        throw new Error(\"Could not convert the src to a React element\");\n      }\n      setState({\n        element: convertedElement,\n        status: STATUS.READY\n      });\n    } catch (error) {\n      handleError(error);\n    }\n  }, [content, handleError, props]);\n  const getContent = useCallback(async () => {\n    const dataURI = /^data:image\\/svg[^,]*?(;base64)?,(.*)/u.exec(src);\n    let inlineSrc;\n    if (dataURI) {\n      inlineSrc = dataURI[1] ? window.atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n    } else if (src.includes(\"<svg\")) {\n      inlineSrc = src;\n    }\n    if (inlineSrc) {\n      handleLoad(inlineSrc);\n      return;\n    }\n    try {\n      if (cacheRequests) {\n        const cachedContent = await cacheStore.get(src, fetchOptions);\n        handleLoad(cachedContent, true);\n      } else {\n        await fetchContent();\n      }\n    } catch (error) {\n      handleError(error);\n    }\n  }, [cacheRequests, fetchContent, fetchOptions, handleError, handleLoad, src]);\n  const load = useCallback(async () => {\n    if (isActive.current) {\n      setState({\n        content: \"\",\n        element: null,\n        isCached: false,\n        status: STATUS.LOADING\n      });\n    }\n  }, []);\n  useEffect2(\n    () => {\n      isActive.current = true;\n      if (!canUseDOM() || isInitialized.current) {\n        return void 0;\n      }\n      try {\n        if (status === STATUS.IDLE) {\n          if (!isSupportedEnvironment()) {\n            throw new Error(\"Browser does not support SVG\");\n          }\n          if (!src) {\n            throw new Error(\"Missing src\");\n          }\n          load();\n        }\n      } catch (error) {\n        handleError(error);\n      }\n      isInitialized.current = true;\n      return () => {\n        isActive.current = false;\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n  useEffect2(() => {\n    if (!canUseDOM() || !previousProps) {\n      return;\n    }\n    if (previousProps.src !== src) {\n      if (!src) {\n        handleError(new Error(\"Missing src\"));\n        return;\n      }\n      load();\n    }\n  }, [handleError, load, previousProps, src]);\n  useEffect2(() => {\n    if (status === STATUS.LOADED) {\n      getElement();\n    }\n  }, [status, getElement]);\n  useEffect2(() => {\n    if (!canUseDOM() || !previousProps || previousProps.src !== src) {\n      return;\n    }\n    if (previousProps.title !== title || previousProps.description !== description) {\n      getElement();\n    }\n  }, [description, getElement, previousProps, src, title]);\n  useEffect2(() => {\n    if (!previousState) {\n      return;\n    }\n    switch (status) {\n      case STATUS.LOADING: {\n        if (previousState.status !== STATUS.LOADING) {\n          getContent();\n        }\n        break;\n      }\n      case STATUS.LOADED: {\n        if (previousState.status !== STATUS.LOADED) {\n          getElement();\n        }\n        break;\n      }\n      case STATUS.READY: {\n        if (previousState.status !== STATUS.READY) {\n          onLoad?.(src, isCached);\n        }\n        break;\n      }\n    }\n  }, [getContent, getElement, isCached, onLoad, previousState, src, status]);\n  const elementProps = omit(\n    props,\n    \"baseURL\",\n    \"cacheRequests\",\n    \"children\",\n    \"description\",\n    \"fetchOptions\",\n    \"innerRef\",\n    \"loader\",\n    \"onError\",\n    \"onLoad\",\n    \"preProcessor\",\n    \"src\",\n    \"title\",\n    \"uniqueHash\",\n    \"uniquifyIDs\"\n  );\n  if (!canUseDOM()) {\n    return loader;\n  }\n  if (element) {\n    return cloneElement(element, {\n      ref: innerRef,\n      ...elementProps\n    });\n  }\n  if ([STATUS.UNSUPPORTED, STATUS.FAILED].includes(status)) {\n    return children;\n  }\n  return loader;\n}\nfunction InlineSVG(props) {\n  if (!cacheStore) {\n    cacheStore = new CacheStore();\n  }\n  const { loader } = props;\n  const [isReady, setReady] = useState(cacheStore.isReady);\n  useEffect2(() => {\n    if (isReady) {\n      return;\n    }\n    cacheStore.onReady(() => {\n      setReady(true);\n    });\n  }, [isReady]);\n  if (!isReady) {\n    return loader;\n  }\n  return /* @__PURE__ */ React.createElement(ReactInlineSVG, { ...props });\n}\nexport {\n  cacheStore,\n  InlineSVG as default\n};\n//# sourceMappingURL=index.mjs.map"],"names":["styleToObject","input","split","reduce","acc","item","key","value","map","d","index","replace","trim","nextKey","_$0","$1","$2","toUpperCase","nextValue","Number","isNaN","startsWith","noTextChildNodes","possibleStandardNames","acceptcharset","accesskey","allowfullscreen","autocapitalize","autocomplete","autocorrect","autofocus","autoplay","autosave","cellpadding","cellspacing","charset","class","classid","classname","colspan","contenteditable","contextmenu","controlslist","crossorigin","dangerouslysetinnerhtml","datetime","defaultchecked","defaultvalue","enctype","for","formmethod","formaction","formenctype","formnovalidate","formtarget","frameborder","hreflang","htmlfor","httpequiv","icon","innerhtml","inputmode","itemid","itemprop","itemref","itemscope","itemtype","keyparams","keytype","marginwidth","marginheight","maxlength","mediagroup","minlength","nomodule","novalidate","playsinline","radiogroup","readonly","referrerpolicy","rowspan","spellcheck","srcdoc","srclang","srcset","tabindex","typemustmatch","usemap","accentheight","alignmentbaseline","allowreorder","arabicform","attributename","attributetype","autoreverse","basefrequency","baselineshift","baseprofile","calcmode","capheight","clippath","clippathunits","cliprule","colorinterpolation","colorinterpolationfilters","colorprofile","colorrendering","contentscripttype","contentstyletype","diffuseconstant","dominantbaseline","edgemode","enablebackground","externalresourcesrequired","fillopacity","fillrule","filterres","filterunits","floodopacity","floodcolor","fontfamily","fontsize","fontsizeadjust","fontstretch","fontstyle","fontvariant","fontweight","glyphname","glyphorientationhorizontal","glyphorientationvertical","glyphref","gradienttransform","gradientunits","horizadvx","horizoriginx","imagerendering","kernelmatrix","kernelunitlength","keypoints","keysplines","keytimes","lengthadjust","letterspacing","lightingcolor","limitingconeangle","markerend","markerheight","markermid","markerstart","markerunits","markerwidth","maskcontentunits","maskunits","numoctaves","overlineposition","overlinethickness","paintorder","pathlength","patterncontentunits","patterntransform","patternunits","pointerevents","pointsatx","pointsaty","pointsatz","preservealpha","preserveaspectratio","primitiveunits","refx","refy","renderingintent","repeatcount","repeatdur","requiredextensions","requiredfeatures","shaperendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stopcolor","stopopacity","strikethroughposition","strikethroughthickness","strokedasharray","strokedashoffset","strokelinecap","strokelinejoin","strokemiterlimit","strokewidth","strokeopacity","suppresscontenteditablewarning","suppresshydrationwarning","surfacescale","systemlanguage","tablevalues","targetx","targety","textanchor","textdecoration","textlength","textrendering","underlineposition","underlinethickness","unicodebidi","unicoderange","unitsperem","unselectable","valphabetic","vectoreffect","vertadvy","vertoriginx","vertoriginy","vhanging","videographic","viewbox","viewtarget","vmathematical","wordspacing","writingmode","xchannelselector","xheight","xlinkactuate","xlinkarcrole","xlinkhref","xlinkrole","xlinkshow","xlinktitle","xlinktype","xmlbase","xmllang","xmlnsxlink","xmlspace","ychannelselector","zoomandpan","onblur","onchange","onclick","oncontextmenu","ondoubleclick","ondrag","ondragend","ondragenter","ondragexit","ondragleave","ondragover","ondragstart","ondrop","onerror","onfocus","oninput","oninvalid","onkeydown","onkeypress","onkeyup","onload","onmousedown","onmouseenter","onmouseleave","onmousemove","onmouseout","onmouseover","onmouseup","onscroll","onsubmit","ontouchcancel","ontouchend","ontouchmove","ontouchstart","onwheel","getReactNode","node","options","level","rest","nodeType","nodeName","test","toLowerCase","parseName","reactKey","attributes","Element","nodeClassNames","getAttribute","className","forEach","name","parseAttributes","parseChildren","childNodes","nodeText","nodeValue","toString","allowWhiteSpaces","parentNode","parentNodeName","includes","console","warn","childNodeList","children","convertFromNode","filter","Boolean","length","convert","includeAllNodes","nodeOnly","selector","type","document","DOMParser","parseFromString","body","node2","querySelector","Node","TypeError","error","convertFromString","actions","randomKey","result","characters","Math","round","random","randomString","Array","isArray","action","condition","pre","post","push","__defProp","Object","defineProperty","__publicField","obj","enumerable","configurable","writable","__defNormalProp","CACHE_NAME","STATUS","IDLE","LOADING","LOADED","FAILED","READY","UNSUPPORTED","randomCharacter","character","floor","canUseDOM","window","createElement","isSupportedEnvironment","div","innerHTML","svg","firstChild","namespaceURI","supportsInlineSVG","async","request","url","response","fetch","contentType","headers","get","fileType","status","Error","some","text","sleep","seconds","Promise","resolve","setTimeout","cacheStore","CacheStore","constructor","this","Map","cacheName","usePersistentCache","REACT_INLINESVG_CACHE_NAME","REACT_INLINESVG_PERSISTENT_CACHE","caches","open","then","cache","cacheApi","catch","message","finally","isReady","callbacks","subscribers","callback","onReady","fetchOptions","fetchAndAddToPersistentCache","fetchAndAddToInternalCache","content","set","data","isCached","handleLoading","match","add","Request","retryCount","keys","entries","delete","clear","allSettled","usePrevious","state","ref","useRef","useEffect","current","getNode","baseURL","description","handleError","hash","preProcessor","title","uniquifyIDs","svgText","processSVG","SVGSVGElement","updateSVGAttributes","originalDesc","removeChild","descElement","createElementNS","prepend","originalTitle","titleElement","replaceableAttributes","linkAttributes","values","a","attribute","exec","r","find","ReactInlineSVG","props","cacheRequests","innerRef","loader","onError","onLoad","src","uniqueHash","setState","useReducer","previousState2","nextState","element","previousProps","previousState","letters","R","isActive","isInitialized","useCallback","handleLoad","loadedContent","hasCache","fetchContent","responseContent","getElement","convertedElement","isValidElement","getContent","dataURI","inlineSrc","atob","decodeURIComponent","cachedContent","load","elementProps","output","hasOwnProperty","call","omit","cloneElement","InlineSVG","setReady","useState"],"sourceRoot":""}